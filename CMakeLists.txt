cmake_minimum_required(VERSION 2.8)
project(spl)


IF( NOT CMAKE_BUILD_TYPE )
SET( CMAKE_BUILD_TYPE "RelWithDebInfo" )
ENDIF()

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

include(CheckFunctionExists)
include(CheckIncludeFiles)

CHECK_INCLUDE_FILES(malloc.h HAVE_MALLOC_H)
CHECK_INCLUDE_FILES(stdlib.h HAVE_STDLIB_H)

FIND_PACKAGE (BISON)
FIND_PACKAGE (FLEX)

BISON_TARGET(SPLParser spl.y ${CMAKE_CURRENT_BINARY_DIR}/spl.tab.c COMPILE_FLAGS -d)
FLEX_TARGET(SPLScanner spl.l  ${CMAKE_CURRENT_BINARY_DIR}/lex.yy.c)
ADD_FLEX_BISON_DEPENDENCY(SPLScanner SPLParser)
add_custom_command(
  OUTPUT "spl_node.c" "structs.h"
  COMMAND perl ${CMAKE_CURRENT_SOURCE_DIR}/struct.pl ${CMAKE_CURRENT_SOURCE_DIR}/spl.structs
  DEPENDS lex.yy.c ${CMAKE_CURRENT_SOURCE_DIR}/spl.structs ${CMAKE_CURRENT_SOURCE_DIR}/struct.pl
)
LIST (APPEND SPL_MASTER_SRC_LIST ${BISON_SPLParser_OUTPUT_SOURCE} ${CMAKE_CURRENT_BINARY_DIR}/spl_node.c)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})

CONFIGURE_FILE( ${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h )

ADD_EXECUTABLE(parse ${SPL_MASTER_SRC_LIST} parse.c)
